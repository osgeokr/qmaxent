# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QMaxentPluginDialog
                                 A QGIS plugin
 This plugin allows users to build species distribution models (SDMs) directly within QGIS using the MaxEnt (Maximum Entropy) approach. It provides an intuitive interface to load presence data, sample background points, extract environmental variables from raster layers, and run machine learning models to predict suitable habitats. Results are visualized as raster layers and can be evaluated using AUC, ROC, and feature importance plots.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2025-03-23
        git sha              : $Format:%H$
        copyright            : (C) 2025 by Byeong-Hyeok Yu
        email                : bhyu@knps.or.kr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'qmaxent_dialog_base.ui'))


class QMaxentPluginDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(QMaxentPluginDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
